# Generated by Django 5.2.1 on 2025-05-16 20:00

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_alertseverity_caseseverity_observabletype_paplevel_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MitreTactic',
            fields=[
                ('tactic_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='KBCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kb_categories', to='api.organization')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='api.kbcategory')),
            ],
            options={
                'verbose_name_plural': 'KB Categories',
            },
        ),
        migrations.CreateModel(
            name='KBArticle',
            fields=[
                ('article_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('content', models.TextField()),
                ('version', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kb_articles', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kb_articles', to='api.organization')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='api.kbcategory')),
            ],
        ),
        migrations.CreateModel(
            name='MitreTechnique',
            fields=[
                ('technique_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url', models.CharField(max_length=255)),
                ('is_subtechnique', models.BooleanField(default=False)),
                ('version', models.CharField(max_length=20)),
                ('parent_technique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtechniques', to='api.mitretechnique')),
            ],
        ),
        migrations.CreateModel(
            name='CaseMitreTechnique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('context_notes', models.TextField(blank=True, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mitre_techniques', to='api.case')),
                ('linked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_technique_links', to=settings.AUTH_USER_MODEL)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='api.mitretechnique')),
            ],
        ),
        migrations.CreateModel(
            name='AlertMitreTechnique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('context_notes', models.TextField(blank=True, null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mitre_techniques', to='api.alert')),
                ('linked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alert_technique_links', to=settings.AUTH_USER_MODEL)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='api.mitretechnique')),
            ],
        ),
        migrations.CreateModel(
            name='TechniqueTactic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tactic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mitretactic')),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mitretechnique')),
            ],
        ),
        migrations.AddField(
            model_name='mitretechnique',
            name='tactics',
            field=models.ManyToManyField(related_name='techniques', through='api.TechniqueTactic', to='api.mitretactic'),
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('target_entity_type', models.CharField(blank=True, max_length=50, null=True)),
                ('target_entity_id', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('occurred_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeline_events', to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='api.case')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='api.organization')),
            ],
            options={
                'ordering': ['-occurred_at'],
            },
        ),
        migrations.CreateModel(
            name='KBArticleVersion',
            fields=[
                ('version_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version_number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='api.kbarticle')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kb_article_versions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-version_number'],
                'unique_together': {('article', 'version_number')},
            },
        ),
        migrations.AddIndex(
            model_name='kbarticle',
            index=models.Index(fields=['slug'], name='api_kbartic_slug_9d6442_idx'),
        ),
        migrations.AddIndex(
            model_name='kbarticle',
            index=models.Index(fields=['status'], name='api_kbartic_status_30b636_idx'),
        ),
        migrations.AddIndex(
            model_name='kbarticle',
            index=models.Index(fields=['organization'], name='api_kbartic_organiz_f30548_idx'),
        ),
        migrations.AddIndex(
            model_name='kbarticle',
            index=models.Index(fields=['category'], name='api_kbartic_categor_1e61d1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='casemitretechnique',
            unique_together={('case', 'technique')},
        ),
        migrations.AlterUniqueTogether(
            name='alertmitretechnique',
            unique_together={('alert', 'technique')},
        ),
        migrations.AlterUniqueTogether(
            name='techniquetactic',
            unique_together={('technique', 'tactic')},
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['case'], name='api_timelin_case_id_b03eeb_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['organization'], name='api_timelin_organiz_c9fb13_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['event_type'], name='api_timelin_event_t_923c0b_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['occurred_at'], name='api_timelin_occurre_0e6815_idx'),
        ),
    ]
