# Generated by Django 5.2.1 on 2025-05-17 03:31

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationEvent',
            fields=[
                ('event_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('payload_schema', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('channel_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel_type', models.CharField(choices=[('WEBHOOK', 'Webhook'), ('EMAIL', 'Email'), ('SLACK', 'Slack'), ('MATTERMOST', 'Mattermost'), ('CUSTOM_HTTP', 'Custom HTTP')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('configuration', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_channels', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('rule_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('message_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='notifications.notificationchannel')),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='notifications.notificationevent')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_rules', to='accounts.organization')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_payload', models.JSONField(default=dict)),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PENDING', 'Pending'), ('RETRYING', 'Retrying')], default='PENDING', max_length=20)),
                ('response_details', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='notifications.notificationchannel')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='accounts.organization')),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='notifications.notificationrule')),
            ],
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['organization'], name='notificatio_organiz_60e1bc_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['channel_type'], name='notificatio_channel_e00152_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_06813e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationchannel',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='notificationrule',
            index=models.Index(fields=['organization'], name='notificatio_organiz_72ab1f_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationrule',
            index=models.Index(fields=['event_type'], name='notificatio_event_t_f7c74a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationrule',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_52a6a1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationrule',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['organization'], name='notificatio_organiz_da9e80_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['status'], name='notificatio_status_a242db_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_d19621_idx'),
        ),
    ]
