version: '3.9'

services:
  web:
    build: .
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=django-db
    depends_on:
      - db
      - redis
    networks:
      - app_network
    restart: always

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: always

  celery_worker:
    build: .
    command: celery -A core worker -l INFO
    volumes:
      - .:/app
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=django-db
    depends_on:
      - web
      - db
      - redis
    networks:
      - app_network
    restart: always

  celery_beat:
    build: .
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=django-db
    depends_on:
      - web
      - db
      - redis
      - celery_worker
    networks:
      - app_network
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
    depends_on:
      - web
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:  # Define a volume for static files
  uv_cache:  # Volume for uv cache 